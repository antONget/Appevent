from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.filters import CommandStart, StateFilter, or_f
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from config_data.config import Config, load_config
import database.requests as rq
import keyboards.keyboard_user as kb
from utils.admin_utils import send_admins

import logging
import asyncio
import random

router = Router()
config: Config = load_config()


class User(StatesGroup):
    number_order = State()
    feed_back = State()


@router.message(CommandStart())
async def process_start_command(message: Message, state: FSMContext) -> None:
    """
    –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ - –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å" –∏–ª–∏ –≤–≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ "/start"
    :param message:
    :param state:
    :return:
    """
    logging.info(f"process_start_command {message.chat.id}")
    await state.set_state(state=None)
    if not message.from_user.username:
        username = 'None'
    else:
        username = message.from_user.username
    await rq.add_user(tg_id=message.chat.id,
                      data={"tg_id": message.chat.id, "username": username})
    admins = config.tg_bot.admin_ids.split(',')
    if str(message.chat.id) in admins:
        await message.answer(text=f'–í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞.\n'
                                  f'–í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–¥—ã –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤',
                             reply_markup=kb.keyboard_start_admin())
    else:
        await message.answer(text="""–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –¢–≤–æ–π –°–¢–ê–†–¢! 

–ü–æ–ª—É—á–∏ –ö–û–î –î–û–°–¢–£–ü–ê –¥–ª—è –≤—Ö–æ–¥–∞:
üéæ  –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥-–¥–æ—Å—Ç—É–ø–∞" –∏ –Ω–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
üéæ–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏" –∏ —É–∑–Ω–∞–π, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞—à–∞ —Å—Ç—É–¥–∏—è!

üíµ–°–ö–ò–î–ö–òüíµ:

50% –Ω–∞ –ø–µ—Ä–≤—É—é –∞—Ä–µ–Ω–¥—É - –Ω–∞–ø–∏—à–∏ –Ω–∞–º —Å—é–¥–∞: @tvoiystart_admin
20% –∑–∞ –æ—Ç–∑—ã–≤ - –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", –æ—Å—Ç–∞–≤—å –æ—Ç–∑—ã–≤ –∏ –ø—Ä–∏—à–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–∞–º @tvoiystart_admin
""",
                             reply_markup=kb.keyboard_start_user())


@router.message(F.text == '–ü–æ–¥–¥–µ—Ä–∂–∫–∞')
async def process_support(message: Message, state: FSMContext):
    """
    –í—ã–±–æ—Ä –ü–û–î–î–ï–†–ñ–ö–ê
    :param message:
    :param state:
    :return:
    """
    logging.info(f"process_support {message.chat.id}")
    await state.set_state(state=None)
    await message.answer(text='–ï—Å–ª–∏ —É —Ç–µ–±—è –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–º!\n'
                              '@tvoiystart_admin')


@router.message(F.text == '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')
async def process_manual(message: Message, state: FSMContext):
    """
    –í—ã–±–æ—Ä –ü–û–î–î–ï–†–ñ–ö–ê
    :param message:
    :param state:
    :return:
    """
    logging.info(f"process_support {message.chat.id}")
    await state.set_state(state=None)
    await message.answer(text="""–°–∏—Å—Ç–µ–º–∞ –¢–≤–æ–π START - —ç—Ç–æ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ!

üéæ–ù–∞–∂–∏–º–∞–π –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–±—è –∫–Ω–æ–ø–∫—É –∏ –ø–æ–ª—É—á–∏—à—å –ø—Ä–æ—Å—Ç—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é!
""",
                         reply_markup=kb.keyboard_question())


@router.callback_query(F.data.startswith('question'))
async def get_answer(callback: CallbackQuery, state: FSMContext):
    """
    –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å
    :param callback:
    :param state:
    :return:
    """
    answer = callback.data.split('_')[1]
    if answer == '1':
        await callback.message.answer_photo(
            photo='AgACAgIAAxkBAAIBd2gJG_pjbggHd_wmsKZ3bk1Rk-UQAAJb7zEb1VNISFdMEW6bc22EAQADAgADeQADNgQ',
            caption="""‚ö°Ô∏è2 –º–∏–Ω—É—Ç—ã –æ—Ç —Å—Ç.–º. –ö–∏—Ä–æ–≤—Å–∫–∏–π –ó–∞–≤–æ–¥
üìå—É–ª. –í–∞—Å–∏ –ê–ª–µ–∫—Å–µ–µ–≤–∞ 1, —ç—Ç–∞–∂ 3

<a href='https://go.2gis.com/FY2Sr'>üìç–ú—ã –≤ 2–ì–∏—Å</a>
<a href='https://yandex.ru/maps/-/CHfUBSkd'>üì±–ú—ã –≤ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã</a>
üì±–ú—ã –≤ Google.–ö–∞—Ä—Ç–∞—Ö""")
    elif answer == '2':
        await callback.message.answer(text="""–ü–æ—á—É–≤—Å—Ç–≤—É–π —Å–µ–±—è –∞–≥–µ–Ω—Ç–æ–º 007 ü•∑

–í—Ö–æ–¥ –ø–æ –∫–æ–¥–æ–≤–æ–º—É –∑–∞–º–∫—É:
üîë–ü–æ–ª—É—á–∏ –∫–æ–¥ –≤ —ç—Ç–æ–º –±–æ—Ç–µ!
üîª–ù–∞–∂–º–∏ –Ω–∞ —Å–µ—Ä–µ–¥–∏–Ω—É —Ä—É—á–∫–∏
üîª–í–≤–µ–¥–∏ –∫–æ–¥
üîª–û—Ç–∫—Ä–æ–π –¥–≤–µ—Ä—å –ø–æ—Å–ª–µ –∑–≤—É–∫–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞""")
    elif answer == '3':
        await callback.message.answer(text="""–í –∫–∞–∂–¥–æ–º –∑–∞–ª–µ –≤—Å–µ –ø–æ–¥–ø–∏—Å–∞–Ω–æ, –Ω–µ –≤–æ–ª–Ω—É–π—Å—è!
–ö–æ–º—Ñ–æ—Ä—Ç–Ω—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –º—ã –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–∞–º–∏, –Ω–æ —Ç—ã –º–æ–∂–µ—à—å –µ–µ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ!

üîÜ–¢–µ–ø–ª—ã–π –ø–æ–ª
–¶–∏—Ñ—Ä—ã –≤ –ª–µ–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É - —Ä–µ–≥—É–ª–∏—Ä—É–µ–º–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
–¶–∏—Ñ—Ä—ã –≤ –¥–æ–º–∏–∫–µ - —Ç–µ–∫—É—â–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
Ô∏Ω —Å–¥–µ–ª–∞–µ—Ç —Ç–µ–ø–ª–µ–µ
Ô∏æ —Å–¥–µ–ª–∞–µ—Ç —Ö–æ–ª–æ–¥–Ω–µ–µ

‚ùÑÔ∏è–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è:
–ë–æ–ª—å—à–∏–µ —Ü–∏—Ñ—Ä—ã - —Ç–µ–∫—É—â–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
–ú–∞–ª–µ–Ω—å–∫–∏–µ —Ü–∏—Ñ—Ä—ã - —Ä–µ–≥—É–ª–∏—Ä—É–µ–º–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
Ô∏Ω  —Å–¥–µ–ª–∞–µ—Ç —Ç–µ–ø–ª–µ–µ
Ô∏æ —Å–¥–µ–ª–∞–µ—Ç —Ö–æ–ª–æ–¥–Ω–µ–µ
ñ£ò —Å–¥–µ–ª–∞–µ—Ç –≤–µ—Ç–µ—Ä —Å–∏–ª—å–Ω–µ–µ –∏ –≥—Ä–æ–º—á–µ

ü™© –°–≤–µ—Ç
–í–∫–ª—é—á–∏ —Å–≤–µ—Ç —Å –ø–æ–º–æ—â—å—é –æ–±—ã—á–Ω–æ–≥–æ –≤–∫–ª—é—á–∞—Ç–µ–ª—è. –ó–µ—Ä–∫–∞–ª–∞ –∏ –ø–æ—Ç–æ–ª–æ–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –≤–º–µ—Å—Ç–µ.
–ù–∞ –ø—É–ª—å—Ç–µ:
‚óØ | - –≤—ã–∫–ª/–≤–∫–ª –ø–æ—Ç–æ–ª–∫–∞
üí°—Å–µ–Ω—Å–æ—Ä–Ω—ã–π –∫—Ä—É–≥ —Å–¥–µ–ª–∞–µ—Ç —Å–≤–µ—Ç —Ç–µ–ø–ª–µ–µ/—Å–≤–µ—Ç–ª–µ–µ

üíø–ó–≤—É–∫
üîâ–ê–ª–∏—Å–∞ - —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ Bluetooth
üîä–ö–æ–ª–æ–Ω–∫–∞ JBL-–ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –ø—Ä–æ–≤–æ–¥–∞ –∏ Bluetooth
""")
    elif answer == '4':
        await callback.message.answer(text="""–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –≤ –Ω–∞—à–∏—Ö –∑–∞–ª–∞—Ö!

–ú—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –æ–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å –∫–æ–º—Ñ–æ—Ä—Ç–∞, –Ω–æ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Å —Ç–≤–æ–µ–π –ø–æ–º–æ—â—å—é!

üëü –†–∞–∑—É–≤–∞–π—Å—è –ø—Ä–∏ –≤—Ö–æ–¥–µ.
–ú—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ —É–±–∏—Ä–∞–µ–º –ø–æ–ª—ã –≤ –Ω–∞—à–µ–º –∫–æ–≤–æ—Ä–∫–∏–Ω–≥–µ, –ø–æ—ç—Ç–æ–º—É –∑–∞ —á–∏—Å—Ç–æ—Ç—É —Å–≤–æ–∏—Ö –Ω–æ—Å–æ—á–∫–æ–≤ –º–æ–∂–µ—à—å –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞—Ç—å :)

üéæ–£–±–∏—Ä–∞–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ—Å–ª–µ –∑–∞–Ω—è—Ç–∏—è.
–†–æ–±–æ—Ç –ø—ã–ª–µ—Å–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞—Ä–∞–µ—Ç—Å—è —É–±—Ä–∞—Ç—å –ø–æ–ª –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è, –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ–µ—Ö–∞—Ç—å —Å–∫–≤–æ–∑—å –∫–æ–≤—Ä–∏–∫ –∏–ª–∏ –º—Ñ—Ä —Ä–æ–ª–ª :(

‚è∞–ù–µ –∑–∞–¥–µ—Ä–∂–∏–≤–∞–π –∑–∞–Ω—è—Ç–∏–µ.
–ï—Å–ª–∏ —Ç—ã –±—Ä–æ–Ω–∏—Ä—É–µ—à—å 1 —á–∞—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, —Ç–æ —Ç–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ –¥–æ–ª–∂–Ω–æ –¥–ª–∏—Ç—å—Å—è 50 –º–∏–Ω—É—Ç!

üíé–ö–∞–∂–¥—ã–µ 50 –º–∏–Ω—É—Ç —Å–∏—Å—Ç–µ–º–∞ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏ –Ω–∞—á–∏–Ω–∞–µ—Ç —Ü–∏–∫–ª –æ—á–∏—Å—Ç–∫–∏ –≤–æ–∑–¥—É—Ö–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–Ω—è—Ç–∏–µ–º, –∞ —Ä–æ–±–æ—Ç –ø—ã–ª–µ—Å–æ—Å –º–æ–µ—Ç –ø–æ–ª.""")
    elif answer == '5':
        await callback.message.answer_photo(
            photo='AgACAgIAAxkBAAIBf2gNIB4sxGE95rnYt1PVh93TR3xtAAKu7jEbKV1wSIFafvJFEpiUAQADAgADeQADNgQ',
            caption="–û—Ç–ø—Ä–∞–≤—å —ç—Ç–æ —Å–≤–æ–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º!",
            show_caption_above_media=True)
    await asyncio.sleep(2)
    await process_support(message=callback.message, state=state)


@router.message(F.text == '–ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞')
async def process_get_password(message: Message, state: FSMContext):
    """
    –í—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    :param message:
    :param state:
    :return:
    """
    logging.info(f"process_get_password {message.chat.id}")
    await state.set_state(state=None)
    await message.answer(text="""üì≤ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–∞ –¥–æ—Å—Ç—É–ø–∞, –ø—Ä–∏—à–ª–∏ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.""")
    await state.set_state(User.number_order)


@router.message(F.text, StateFilter(User.number_order))
async def get_number_order(message: Message, state: FSMContext, bot: Bot) -> None:
    """
    –ü–æ–ª—É—á–∞–µ–º –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞
    :param message:
    :param state:
    :param bot:
    :return:
    """
    logging.info(f'get_number_order {message.chat.id}')
    number_order = message.text
    # if not number_order.isdigit():
    #     await message.answer(text='–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º')
    #     return

    order = await rq.get_order_number(number_order=int(number_order))
    if order:
        title_object = order.title_object
        object_order = await rq.get_object_title(title=title_object)
        if object_order:
            await message.answer(text=f"–ü—Ä–∏–≤–µ—Ç, {order.name_client} –†–∞–¥—ã –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É! üòâ\n\n"
                                      f"–¢—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª(-–∞): {title_object}\n"
                                      f"–î–∞—Ç–∞ –±—Ä–æ–Ω–∏: {order.date_order} {order.month_order}\n"
                                      f"–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –±—Ä–æ–Ω–∏: {order.time_order}\n"
                                      f"–í—Ä–µ–º—è –∫–æ–Ω—Ü–∞ –±—Ä–æ–Ω–∏: {order.time_order}\n\n"
                                      f"üìå–ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç:  {object_order.password_object}\n"
                                      f"üéæ–ù–∞–∂–º–∏ –Ω–∞ '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏' –∏ —É–∑–Ω–∞–π –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∑–∞–ª–æ–º!")
            # await message.answer_video(video=object_order.video_object,
            #                            caption='–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∫–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ –æ–±—ä–µ–∫—Ç–∞')
            user_info = await rq.get_user(tg_id=message.chat.id)
            order_user = user_info.list_order.split(',')
            order_user.append(str(order.id))
            await rq.set_order_user(tg_id=message.chat.id, orders=','.join(order_user))
            await rq.set_order_tg_id(tg_id=message.chat.id, id_order=order.id)
        else:
            await message.answer(text="""–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üßê

–ü—Ä–æ–≤–µ—Ä—å 2 –≤–µ—â–∏:
1. –ó–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω? –ï—Å–ª–∏ –¥–∞, —Ç–æ –ø—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –ø–æ–≤—Ç–æ—Ä–∏ –≤–≤–æ–¥!

2. –ó–∞–∫–∞–∑ –Ω–µ –æ–ø–ª–∞—á–µ–Ω? –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞–∫–∞–∑. –°—á–µ—Ç —É–∂–µ —É —Ç–µ–±—è –Ω–∞ –ø–æ—á—Ç–µüòä

–ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –Ω–∞–ø–∏—à–∏ –Ω–∞–º: @tvoiystart_admin
""")
            await send_admins(bot=bot, text=f'–û–±—ä–µ–∫—Ç {title_object} –≤ –ë–î –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
        await state.set_state(state=None)
    else:
        await message.answer(text="""–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üßê

–ü—Ä–æ–≤–µ—Ä—å 2 –≤–µ—â–∏:
1. –ó–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω? –ï—Å–ª–∏ –¥–∞, —Ç–æ –ø—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –ø–æ–≤—Ç–æ—Ä–∏ –≤–≤–æ–¥!

2. –ó–∞–∫–∞–∑ –Ω–µ –æ–ø–ª–∞—á–µ–Ω? –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞–∫–∞–∑. –°—á–µ—Ç —É–∂–µ —É —Ç–µ–±—è –Ω–∞ –ø–æ—á—Ç–µüòä

–ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –Ω–∞–ø–∏—à–∏ –Ω–∞–º: @tvoiystart_admin
""")
        await state.set_state(state=None)


@router.message(F.text == '–û—Ç–∑—ã–≤—ã')
async def process_feedback(message: Message, state: FSMContext):
    """
    –í—ã–±–æ—Ä –û–¢–ó–´–í–´
    :param message:
    :param state:
    :return:
    """
    logging.info(f"process_feedback {message.chat.id}")
    await state.set_state(state=None)
    await message.answer(text="""–û–π, –∫–∞–∫ –∫—Ä—É—Ç–æ!‚ô•Ô∏è

–¢—ã —Ö–æ—á–µ—à—å –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤?
–ò–ª–∏ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞–ª–∏ –¥—Ä—É–≥–∏–µ?
""",
                         reply_markup=kb.keyboard_feedback())


@router.callback_query(F.data == 'show_feedback')
async def show_feedback(callback: CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–∑—ã–≤—ã
    :param callback:
    :return:
    """
    logging.info(f"show_feedback {callback.message.chat.id}")
    await callback.message.answer(text="""–û—Ç–∑—ã–≤—ã –æ –¢–≤–æ–π START:

<a href='https://yandex.ru/maps/-/CHfYVZNS'>üìç–Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã</a>
<a href='https://go.2gis.com/PzWuJ'>üìç2–ì–ò–°</a>
üìçGoogle.–ö–∞—Ä—Ç—ã
<a href='https://www.instagram.com/tvoiystart'>ü©∑ Instagram</a>
<a href='https://vk.com/tvoiystart'>üíô VK</a>
<a href='https://t.me/tvoiystart'>ü©µ Telegram</a>""")


@router.callback_query(F.data == 'leave_feedback')
async def leave_feedback(callback: CallbackQuery, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–∑—ã–≤—ã
    :param callback:
    :return:
    """
    logging.info(f"leave_feedback {callback.message.chat.id}")
    await callback.message.answer(text="""–ú—ã –æ—á–µ–Ω—å –ª—é–±–∏–º —Å–ª—É—à–∞—Ç—å –æ —Å–µ–±–µ, –ø–æ—ç—Ç–æ–º—É –∑–∞ –æ—Ç–∑—ã–≤ –º—ã –¥–∞–µ–º —Å–∫–∏–¥–∫–∏!ü©∑

–•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É 20% –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–Ω—è—Ç–∏–µ?
–û—Ç–º–µ—Ç—å –Ω–∞—Å –≤ IG –∏–ª–∏ VK –∏ –Ω–∞–ø–∏—à–∏ –Ω–∞–º –≤ –¥–∏—Ä–µ–∫—Ç/–ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è! –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–º —Ç–µ–±–µ –ø—Ä–æ–º–æ–∫–æ–¥!

–ù–∞—à–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏:
<a href='https://yandex.ru/maps/-/CHfYVZNS'>üì±–Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã</a>
<a href='https://go.2gis.com/PzWuJ'>üìç2–ì–ò–°</a>
üì±Google.–ö–∞—Ä—Ç—ã
<a href='https://www.instagram.com/tvoiystart'>üì± Instagram</a>
<a href='https://vk.com/tvoiystart'>üì± VK</a>
<a href='https://t.me/tvoiystart'>üì± Telegram</a>

–ê –µ—â–µ —Ç—ã –ø—Ä–æ—Å—Ç–æ –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –∑–¥–µ—Å—å, –≤—Å–µ, —á—Ç–æ –∑–∞—Ö–æ—á–µ—à—å –∏ –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ç–µ–±–µ –æ—Ç–≤–µ—Ç–∏–º!""")
    await state.set_state(User.feed_back)


@router.message(StateFilter(User.feed_back), or_f(F.document, F.photo, F.video))
async def get_feed_back(message: Message, state: FSMContext):
    """
    –ü–æ–ª—É—á–∞–µ–º –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –æ—Ç–∑—ã–≤–∞
    :param message:
    :param state:
    :return:
    """
    logging.info(f'get_feed_back {message.chat.id}')
    await asyncio.sleep(random.random())
    data = await state.get_data()
    list_content = data.get('content', [])
    count = data.get('count', [])
    if message.text:
        await message.answer(text=f'üìé –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ), –≤–∏–¥–µ–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç.')
        return
    elif message.photo:
        content = message.photo[-1].file_id
        if message.caption:
            caption = message.caption
        else:
            caption = 'None'
        await state.update_data(caption=caption)

    elif message.video:
        content = message.video.file_id
        if message.caption:
            caption = message.caption
        else:
            caption = 'None'
        await state.update_data(caption=caption)

    elif message.document:
        content = message.document.file_id
        if message.caption:
            caption = message.caption
        else:
            caption = 'None'
        await state.update_data(caption=caption)

    list_content.append(content)
    count.append(content)
    await state.update_data(content=list_content)
    await state.update_data(count=count)
    await state.set_state(state=None)
    if len(count) == 1:
        await message.answer(text='–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –º–∞—Ç–µ—Ä–∏–∞–ª –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å?',
                             reply_markup=kb.keyboard_send())


@router.callback_query(F.data.endswith('content'))
async def send_add_content(callback: CallbackQuery, state: FSMContext, bot: Bot):
    logging.info(f'send_add_content {callback.message.chat.id}')
    answer = callback.data.split('_')[0]
    if answer == 'add':
        await state.set_state(User.content_state)
        await state.update_data(count=[])
        await callback.message.edit_text(text='üìé –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ), –≤–∏–¥–µ–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç.')
    else:
        await callback.message.edit_text(text='–°–ø–∞—Å–∏–±–æ! –ë–ª–∞–≥–æ–¥–∞—Ä—è —Ç–≤–æ–µ–º—É –æ—Ç–∑—ã–≤—É –º—ã —Å—Ç–∞–Ω–æ–≤–∏–º—Å—è –ª—É—á—à–µ —Å –∫–∞–∂–¥—ã–º –¥–Ω–µ–º!',
                                         reply_markup=None)

        data = await state.get_data()
        content = data['content']

        for admin in config.tg_bot.admin_ids.split(','):
            try:
                for item in content:
                    try:
                        await bot.send_photo(chat_id=admin,
                                             photo=item)
                    except:
                        try:
                            await bot.send_video(chat_id=admin,
                                                 video=item)
                        except:
                            await bot.send_document(chat_id=admin,
                                                    document=item)
            except:
                await bot.send_message(chat_id=admin,
                                       text='–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç')
        await state.set_state(state=None)

